name: QA
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  make-versions:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.make-versions.outputs.versions }}
    steps:
      - uses: actions/checkout@v4
      - name: Make versions
        id: make-versions
        run: |
          classifiers="$(yq -p toml -o toml '.project.classifiers[]' pyproject.toml | grep "Programming Language :: Python :: " | grep "\.")"
          versions="$(echo "$classifiers" | sed -e 's/Programming Language :: Python :: \([0-9.]*\)$/"\1"/g' | tr '\n' ',' | sed -e 's/,$//g')"
          echo "versions=[$versions]" > "$GITHUB_OUTPUT"

  qa:
    name: Run QA checks
    runs-on: ubuntu-latest
    needs: make-versions
    strategy:
      matrix:
        python-version: ${{fromJson(needs.make-versions.outputs.versions)}}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Node.js LTS
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - name: Install the world
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -e .[dev]
      - name: Run linting
        run: |
          flake8 ./pyee ./tests
          validate-pyproject ./pyproject.toml
      - name: Run type checking
        run: |
          npx pyright@latest
      - name: Run tests
        run: pytest ./tests
